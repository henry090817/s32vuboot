/*
 * (C) Copyright 2013 Freescale Semiconductor, Inc.
 *
 * SPDX-License-Identifier:	GPL-2.0+
 */

#ifndef __IOMUX_SAC58R_H__
#define __IOMUX_SAC58R_H__

#include <asm/imx-common/iomux-v3.h>


/* Pad control groupings */
#define SAC58R_UART_PAD_CTRL	(PAD_CTL_PUS_100K_UP | PAD_CTL_SPEED_MED | \
			PAD_CTL_DSE_25ohm | PAD_CTL_OBE_IBE_ENABLE)
#define SAC58R_UART_PAD_CTRL_RX	(PAD_CTL_PUS_100K_UP | PAD_CTL_SPEED_MED | \
			PAD_CTL_DSE_25ohm | PAD_CTL_IBE_ENABLE)
#define SAC58R_SDHC_PAD_CTRL	(PAD_CTL_PUS_47K_UP | PAD_CTL_SPEED_HIGH | \
			PAD_CTL_DSE_75ohm| PAD_CTL_SRE | PAD_CTL_HYS | \
			PAD_CTL_OBE_IBE_ENABLE)
#define SAC58R_ENET_PAD_CTRL (PAD_CTL_PUS_47K_UP | PAD_CTL_SPEED_HIGH | \
			PAD_CTL_DSE_50ohm | PAD_CTL_OBE_IBE_ENABLE)
#define SAC58R_DDR_PAD_CTRL	PAD_CTL_DSE_25ohm
#define SAC58R_I2C_PAD_CTRL	(PAD_CTL_PUS_100K_UP | PAD_CTL_DSE_37ohm | \
				PAD_CTL_SPEED_MED | PAD_CTL_HYS | PAD_CTL_ODE | \
				PAD_CTL_SRE | PAD_CTL_OBE_IBE_ENABLE)

#define SAC58R_I2C_GPIO_PAD_CTRL	(PAD_CTL_PUS_22K_UP | PAD_CTL_DSE_25ohm | \
				PAD_CTL_SPEED_MED | PAD_CTL_IBE_ENABLE)

#define SAC58R_NFC_IO_PAD_CTRL (PAD_CTL_SPEED_HIGH | PAD_CTL_SRE | \
				PAD_CTL_DSE_50ohm | PAD_CTL_PUS_47K_UP | PAD_CTL_OBE_IBE_ENABLE)
#define SAC58R_NFC_SIG_PAD_CTRL	(PAD_CTL_SPEED_HIGH | PAD_CTL_SRE | \
				PAD_CTL_DSE_50ohm | PAD_CTL_PUS_47K_UP | PAD_CTL_OBE_ENABLE)
#define SAC58R_NFC_SIG_RB_PAD_CTRL	(PAD_CTL_SPEED_HIGH | \
				PAD_CTL_DSE_20ohm | PAD_CTL_IBE_ENABLE)
#define SAC58R_SAI_PAD_CTRL	(PAD_CTL_PUS_100K_UP | PAD_CTL_SPEED_HIGH | \
				PAD_CTL_DSE_25ohm | PAD_CTL_OBE_IBE_ENABLE)
#define SAC58R_ESAI_PAD_CTRL (PAD_CTL_PUS_100K_UP | PAD_CTL_SPEED_HIGH | \
				PAD_CTL_DSE_25ohm | PAD_CTL_OBE_IBE_ENABLE)
#define SAC58R_GPIO_PAD_CTRL	(PAD_CTL_PUS_100K_UP | PAD_CTL_SPEED_MED | \
			PAD_CTL_DSE_25ohm | PAD_CTL_OBE_IBE_ENABLE)

#define SAC58R_SPI_PAD_CTRL	(PAD_CTL_PUS_100K_UP | PAD_CTL_SPEED_HIGH | \
				PAD_CTL_DSE_25ohm)

#define SAC58R_USBID_PAD_CTRL	(PAD_CTL_PUS_47K_UP | PAD_CTL_SPEED_MED | \
				PAD_CTL_DSE_75ohm | PAD_CTL_IBE_ENABLE)

#define SAC58R_QSPI_SIG_PAD_CTRL (PAD_CTL_SPEED_HIGH | \
				PAD_CTL_DSE_20ohm | PAD_CTL_OBE_IBE_ENABLE)

#define SAC58R_QSPI_CS_SIG_PAD_CTRL (PAD_CTL_SPEED_HIGH | \
				PAD_CTL_DSE_20ohm | PAD_CTL_PUS_22K_UP | PAD_CTL_OBE_IBE_ENABLE)

enum {
	SAC58R_PAD_PH14__UART0_TX		= IOMUX_PAD(0x03b8, 0x03b8, 1, 0x0b50, 2, SAC58R_UART_PAD_CTRL),
	SAC58R_PAD_PH15__UART0_RX		= IOMUX_PAD(0x03bc, 0x03bc, 0, 0x0b20, 2, SAC58R_UART_PAD_CTRL_RX),
	SAC58R_PAD_PF11__UART1_TX		= IOMUX_PAD(0x02ac, 0x02ac, 1, 0x0b54, 2, SAC58R_UART_PAD_CTRL),
	SAC58R_PAD_PF12__UART1_RX		= IOMUX_PAD(0x02b0, 0x02b0, 0, 0x0b28, 2, SAC58R_UART_PAD_CTRL_RX),
	SAC58R_PAD_PL5__UART2_TX		= IOMUX_PAD(0x0594, 0x0594, 1, 0x0b58, 2, SAC58R_UART_PAD_CTRL),
	SAC58R_PAD_PL4__UART2_RX		= IOMUX_PAD(0x03bc, 0x03bc, 0, 0x0b30, 2, SAC58R_UART_PAD_CTRL_RX),
	SAC58R_PAD_PE28__UART3_TX		= IOMUX_PAD(0x0270, 0x0270, 1, 0x0b38, 2, SAC58R_UART_PAD_CTRL),
	SAC58R_PAD_PE27__UART3_RX		= IOMUX_PAD(0x026c, 0x026c, 0, 0x0b5c, 2, SAC58R_UART_PAD_CTRL_RX),
	SAC58R_PAD_PH0__UART4_TX		= IOMUX_PAD(0x0380, 0x0380, 1, 0x0b60, 3, SAC58R_UART_PAD_CTRL),
	SAC58R_PAD_PH1__UART4_RX		= IOMUX_PAD(0x0384, 0x0384, 0, 0x0b40, 3, SAC58R_UART_PAD_CTRL_RX),
	SAC58R_PAD_PH9__UART5_TX		= IOMUX_PAD(0x03a4, 0x03a4, 1, 0x0b64, 3, SAC58R_UART_PAD_CTRL),
	SAC58R_PAD_PH10__UART5_RX		= IOMUX_PAD(0x03a8, 0x03a8, 0, 0x0b48, 3, SAC58R_UART_PAD_CTRL_RX),

	SAC58R_PAD_PF0__SDHC0_CLK		= IOMUX_PAD(0x0280, 0x0280, 1, 0x0dd8, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PF1__SDHC0_CMD		= IOMUX_PAD(0x0284, 0x0284, 1, 0x0dc4, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PF2__SDHC0_DAT0		= IOMUX_PAD(0x0288, 0x0288, 1, 0x0dc8, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PF3__SDHC0_DAT1		= IOMUX_PAD(0x028c, 0x028c, 1, 0x0dcc, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PF4__SDHC0_DAT2		= IOMUX_PAD(0x0290, 0x0290, 1, 0x0dd0, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PF5__SDHC0_DAT3		= IOMUX_PAD(0x0294, 0x0294, 1, 0x0dd4, 2, SAC58R_SDHC_PAD_CTRL),

	SAC58R_PAD_PF26__SDHC1_CLK		= IOMUX_PAD(0x02e8, 0x02e8, 1, 0x0df8, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PF27__SDHC1_CMD		= IOMUX_PAD(0x02ec, 0x02ec, 1, 0x0de4, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PF22__SDHC1_DAT0		= IOMUX_PAD(0x02d8, 0x02d8, 1, 0x0de8, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PF23__SDHC1_DAT1		= IOMUX_PAD(0x02dc, 0x02dc, 1, 0x0dec, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PF19__SDHC1_DAT2		= IOMUX_PAD(0x02cc, 0x02cc, 1, 0x0df0, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PF20__SDHC1_DAT3		= IOMUX_PAD(0x02d0, 0x02d0, 1, 0x0df4, 2, SAC58R_SDHC_PAD_CTRL),

	SAC58R_PAD_PC12__SDHC2_CLK		= IOMUX_PAD(0x0130, 0x0130, 2, 0x0e28, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PC13__SDHC2_CMD		= IOMUX_PAD(0x0134, 0x0134, 2, 0x0e00, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PC9__SDHC2_DAT0		= IOMUX_PAD(0x0124, 0x0124, 2, 0x0e08, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PC6__SDHC2_DAT1		= IOMUX_PAD(0x0118, 0x0118, 2, 0x0e0c, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PC5__SDHC2_DAT2		= IOMUX_PAD(0x0114, 0x0114, 2, 0x0e10, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PC2__SDHC2_DAT3		= IOMUX_PAD(0x0108, 0x0108, 2, 0x0e14, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PC10__SDHC2_DAT4		= IOMUX_PAD(0x0128, 0x0128, 2, 0x0e18, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PC11__SDHC2_DAT5		= IOMUX_PAD(0x012c, 0x012c, 2, 0x0e1c, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PC7__SDHC2_DAT6		= IOMUX_PAD(0x011c, 0x011c, 2, 0x0e20, 2, SAC58R_SDHC_PAD_CTRL),
	SAC58R_PAD_PC8__SDHC2_DAT7		= IOMUX_PAD(0x0120, 0x0120, 2, 0x0e24, 2, SAC58R_SDHC_PAD_CTRL),
	
	SAC58R_PAD_PD12__LVDS0_CLKP		= IOMUX_PAD(0x01B0, 0x01B0, 3, __NA_, 0, 0x0),
	SAC58R_PAD_PD13__LVDS0_CLKN		= IOMUX_PAD(0x01B4, 0x01B4, 3, __NA_, 0, 0x0),
	SAC58R_PAD_PD11__LVDS0_TX0P		= IOMUX_PAD(0x01AC, 0x01AC, 5, __NA_, 0, 0x0),
	SAC58R_PAD_PD14__LVDS0_TX0N		= IOMUX_PAD(0x01B8, 0x01B8, 5, __NA_, 0, 0x0),
	SAC58R_PAD_PD15__LVDS0_TX1P		= IOMUX_PAD(0x01BC, 0x01BC, 3, __NA_, 0, 0x0),
	SAC58R_PAD_PD16__LVDS0_TX1N		= IOMUX_PAD(0x01C0, 0x01C0, 3, __NA_, 0, 0x0),
	SAC58R_PAD_PD17__LVDS0_TX2P		= IOMUX_PAD(0x01C4, 0x01C4, 5, __NA_, 0, 0x0),
	SAC58R_PAD_PD18__LVDS0_TX2N		= IOMUX_PAD(0x01C8, 0x01C8, 3, __NA_, 0, 0x0),
	SAC58R_PAD_PD19__LVDS0_TX3P		= IOMUX_PAD(0x01CC, 0x01CC, 4, __NA_, 0, 0x0),
	SAC58R_PAD_PD20__LVDS0_TX3N		= IOMUX_PAD(0x01D0, 0x01D0, 3, __NA_, 0, 0x0),
	SAC58R_PAD_PK7__GPIO327			= IOMUX_PAD(0x051C, 0x51C, 0, __NA_, 0, 0x2102),
	SAC58R_PAD_PK9__GPIO329			= IOMUX_PAD(0x0524, 0x0524, 0, __NA_, 0, 0x2102),

	SAC58R_PAD_DDR_A15__DDR_A15		= IOMUX_PAD(0x006c, 0x006c, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A14__DDR_A14		= IOMUX_PAD(0x0068, 0x0068, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A13__DDR_A13		= IOMUX_PAD(0x0064, 0x0064, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A12__DDR_A12		= IOMUX_PAD(0x0060, 0x0060, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A11__DDR_A11		= IOMUX_PAD(0x005c, 0x005c, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A10__DDR_A10		= IOMUX_PAD(0x0058, 0x0058, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A9__DDR_A9		= IOMUX_PAD(0x0054, 0x0054, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A8__DDR_A8		= IOMUX_PAD(0x0050, 0x0050, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A7__DDR_A7		= IOMUX_PAD(0x004c, 0x004c, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A6__DDR_A6		= IOMUX_PAD(0x0048, 0x0048, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A5__DDR_A5		= IOMUX_PAD(0x0044, 0x0044, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A4__DDR_A4		= IOMUX_PAD(0x0040, 0x0040, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A3__DDR_A3		= IOMUX_PAD(0x003c, 0x003c, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A2__DDR_A2		= IOMUX_PAD(0x0038, 0x0038, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A1__DDR_A1		= IOMUX_PAD(0x0034, 0x0034, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_A0__DDR_A0		= IOMUX_PAD(0x0030, 0x0030, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_BA2__DDR_BA_2	= IOMUX_PAD(0x002c, 0x002c, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_BA1__DDR_BA_1	= IOMUX_PAD(0x0028, 0x0028, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_BA0__DDR_BA_0	= IOMUX_PAD(0x0024, 0x0024, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_CAS__DDR_CAS		= IOMUX_PAD(0x0008, 0x0008, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_CKE1__DDR_CKE1	= IOMUX_PAD(0x0018, 0x0018, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_CKE0__DDR_CKE0	= IOMUX_PAD(0x0014, 0x0014, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_CLK0__DDR_CLK0	= IOMUX_PAD(0x0004, 0x0004, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_CS_B1__DDR_CS_B1	= IOMUX_PAD(0x0020, 0x0020, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_CS_B0__DDR_CS_B0	= IOMUX_PAD(0x001c, 0x001c, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D31__DDR_D31		= IOMUX_PAD(0x010c, 0x010c, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D30__DDR_D30		= IOMUX_PAD(0x0108, 0x0108, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D29__DDR_D29		= IOMUX_PAD(0x0104, 0x0104, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D28__DDR_D28		= IOMUX_PAD(0x0100, 0x0100, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D27__DDR_D27		= IOMUX_PAD(0x00fc, 0x00fc, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D26__DDR_D26		= IOMUX_PAD(0x00f8, 0x00f8, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D25__DDR_D25		= IOMUX_PAD(0x00f4, 0x00f4, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D24__DDR_D24		= IOMUX_PAD(0x00f0, 0x00f0, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D23__DDR_D23		= IOMUX_PAD(0x00ec, 0x00ec, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D22__DDR_D22		= IOMUX_PAD(0x00e8, 0x00e8, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D21__DDR_D21		= IOMUX_PAD(0x00e4, 0x00e4, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D20__DDR_D20		= IOMUX_PAD(0x00e0, 0x0ee0, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D19__DDR_D19		= IOMUX_PAD(0x00dc, 0x00dc, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D18__DDR_D18		= IOMUX_PAD(0x00d8, 0x00d8, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D17__DDR_D17		= IOMUX_PAD(0x00d4, 0x00d4, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D16__DDR_D16		= IOMUX_PAD(0x00d0, 0x00d0, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D15__DDR_D15		= IOMUX_PAD(0x00cc, 0x00cc, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D14__DDR_D14		= IOMUX_PAD(0x00c8, 0x00c8, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D13__DDR_D13		= IOMUX_PAD(0x00c4, 0x00c4, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D12__DDR_D12		= IOMUX_PAD(0x00c0, 0x00c0, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D11__DDR_D11		= IOMUX_PAD(0x00bc, 0x00bc, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D10__DDR_D10		= IOMUX_PAD(0x00b8, 0x00b8, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D9__DDR_D9		= IOMUX_PAD(0x00b4, 0x00b4, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D8__DDR_D8		= IOMUX_PAD(0x00b0, 0x00b0, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D7__DDR_D7		= IOMUX_PAD(0x00ac, 0x00ac, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D6__DDR_D6		= IOMUX_PAD(0x00a8, 0x00a8, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D5__DDR_D5		= IOMUX_PAD(0x00a4, 0x00a4, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D4__DDR_D4		= IOMUX_PAD(0x00a0, 0x00a0, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D3__DDR_D3		= IOMUX_PAD(0x009c, 0x009c, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D2__DDR_D2		= IOMUX_PAD(0x0098, 0x0098, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D1__DDR_D1		= IOMUX_PAD(0x0094, 0x0094, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_D0__DDR_D0		= IOMUX_PAD(0x0090, 0x0090, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_DM1__DDR_DM3		= IOMUX_PAD(0x007c, 0x007c, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_DM0__DDR_DM2		= IOMUX_PAD(0x0078, 0x0078, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_DM1__DDR_DM1		= IOMUX_PAD(0x0074, 0x0074, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_DM0__DDR_DM0		= IOMUX_PAD(0x0070, 0x0070, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_DQS3__DDR_DQS3	= IOMUX_PAD(0x008c, 0x008c, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_DQS0__DDR_DQS2	= IOMUX_PAD(0x0088, 0x0088, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_DQS1__DDR_DQS1	= IOMUX_PAD(0x0084, 0x0084, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_DQS0__DDR_DQS0	= IOMUX_PAD(0x0080, 0x0080, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_RAS__DDR_RAS		= IOMUX_PAD(0x000c, 0x000c, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_WE__DDR_WE_B		= IOMUX_PAD(0x0010, 0x0010, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_ODT1__DDR_ODT0	= IOMUX_PAD(0x0110, 0x0110, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_ODT0__DDR_ODT1	= IOMUX_PAD(0x0114, 0x0114, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),
	SAC58R_PAD_DDR_ZQ__DDR_ZQ		= IOMUX_PAD(0x0118, 0x0118, 0, __NA_, 0, SAC58R_DDR_PAD_CTRL),

	SAC58R_PAD_PA0_I2C0_SDA			= IOMUX_PAD(0x0000, 0x0000, 1, 0x0c34, 2, SAC58R_I2C_PAD_CTRL),
	SAC58R_PAD_PA1_I2C0_SCL			= IOMUX_PAD(0x0004, 0x0004, 1, 0x0c30, 2, SAC58R_I2C_PAD_CTRL),
	SAC58R_PAD_PE19_I2C1_SCL		= IOMUX_PAD(0x024c, 0x024c, 1, 0x0c38, 2, SAC58R_I2C_PAD_CTRL),
	SAC58R_PAD_PE10_I2C1_SDA		= IOMUX_PAD(0x0250, 0x0250, 1, 0x0c3c, 2, SAC58R_I2C_PAD_CTRL),
	SAC58R_PAD_PA8_I2C2_SDA			= IOMUX_PAD(0x0020, 0x0020, 1, 0x0c44, 2, SAC58R_I2C_PAD_CTRL),
	SAC58R_PAD_PA9_I2C2_SCL			= IOMUX_PAD(0x0024, 0x0024, 1, 0x0c40, 2, SAC58R_I2C_PAD_CTRL),
	SAC58R_PAD_PH2_I2C3_SCL			= IOMUX_PAD(0x0388, 0x0388, 1, 0x0c48, 2, SAC58R_I2C_PAD_CTRL),
	SAC58R_PAD_PH4_I2C3_SDA			= IOMUX_PAD(0x0390, 0x0390, 1, 0x0c4c, 2, SAC58R_I2C_PAD_CTRL),

	SAC58R_PAD_PA0_GPIO_0			= IOMUX_PAD(0x0000, 0x0000, 0, __NA_, 2, SAC58R_I2C_GPIO_PAD_CTRL),
	SAC58R_PAD_PA1_GPIO_1			= IOMUX_PAD(0x0004, 0x0004, 0, __NA_, 2, SAC58R_I2C_GPIO_PAD_CTRL),
	SAC58R_PAD_PE19_GPIO_148		= IOMUX_PAD(0x024c, 0x024c, 0, __NA_, 2, SAC58R_I2C_GPIO_PAD_CTRL),
	SAC58R_PAD_PE10_GPIO_147		= IOMUX_PAD(0x0250, 0x0250, 0, __NA_, 2, SAC58R_I2C_GPIO_PAD_CTRL),
	SAC58R_PAD_PA8_GPIO_8			= IOMUX_PAD(0x0020, 0x0020, 0, __NA_, 2, SAC58R_I2C_GPIO_PAD_CTRL),
	SAC58R_PAD_PA9_GPIO_9			= IOMUX_PAD(0x0024, 0x0024, 0, __NA_, 2, SAC58R_I2C_GPIO_PAD_CTRL),
	SAC58R_PAD_PH2_GPIO_226			= IOMUX_PAD(0x0388, 0x0388, 0, __NA_, 2, SAC58R_I2C_GPIO_PAD_CTRL),
	SAC58R_PAD_PH4_GPIO_228			= IOMUX_PAD(0x0390, 0x0390, 0, __NA_, 2, SAC58R_I2C_GPIO_PAD_CTRL),


	SAC58R_PAD_PG5_SAI0_TX_BCLK 	= IOMUX_PAD(0x0314, 0x0314, 2, 0x098C, 2, SAC58R_SAI_PAD_CTRL),
	SAC58R_PAD_PG6_SAI0_TX_SYNC 	= IOMUX_PAD(0x0318, 0x0318, 2, 0x0988, 2, SAC58R_SAI_PAD_CTRL),
	SAC58R_PAD_PF10_SAI0_RX_DATA 	= IOMUX_PAD(0x02A8, 0x02A8, 0, 0x0920, 2, SAC58R_SAI_PAD_CTRL),
	SAC58R_PAD_PF9_SAI0_TX_DATA 	= IOMUX_PAD(0x02A4, 0x02A4, 1,  __NA_, 0, SAC58R_SAI_PAD_CTRL),


	SAC58R_PAD_PH11_SAI1_TX_BCLK 	= IOMUX_PAD(0x03AC, 0x03AC, 2, 0x0994, 2, SAC58R_SAI_PAD_CTRL),
	SAC58R_PAD_PH12_SAI1_TX_SYNC 	= IOMUX_PAD(0x03B0, 0x03B0, 1, 0x0990, 2, SAC58R_SAI_PAD_CTRL),
	SAC58R_PAD_PH16_SAI1_RX_BCLK 	= IOMUX_PAD(0x03C0, 0x03C0, 1, 0x0928, 2, SAC58R_SAI_PAD_CTRL),
	SAC58R_PAD_PH17_SAI1_RX_SYNC 	= IOMUX_PAD(0x03C4, 0x03C4, 1, 0x0924, 2, SAC58R_SAI_PAD_CTRL),
	SAC58R_PAD_PH18_SAI1_RX_DATA 	= IOMUX_PAD(0x03C8, 0x03C8, 1, 0x092c, 2, SAC58R_SAI_PAD_CTRL),
	SAC58R_PAD_PH19_SAI1_TX_DATA 	= IOMUX_PAD(0x03CC, 0x03CC, 1,  __NA_, 0, SAC58R_SAI_PAD_CTRL),

	SAC58R_PAD_PA5_ESAI0_FSR        = IOMUX_PAD(0x0014, 0x0014, 1, 0x084c, 2, SAC58R_ESAI_PAD_CTRL),
	SAC58R_PAD_PA6_ESAI0_SCKR       = IOMUX_PAD(0x0018, 0x0018, 1, 0x0848, 2, SAC58R_ESAI_PAD_CTRL),
	SAC58R_PAD_PA12_ESAI0_SDO5_SDI0 = IOMUX_PAD(0x0030, 0x0030, 1, 0x0864, 3, SAC58R_ESAI_PAD_CTRL),
	SAC58R_PAD_PA14_ESAI0_SDO2_SDI3 = IOMUX_PAD(0x0038, 0x0038, 1,  __NA_, 0, SAC58R_ESAI_PAD_CTRL),
	SAC58R_PAD_PA15_ESAI0_SDO4_SDI3 = IOMUX_PAD(0x003c, 0x003c, 1, 0x0868, 2, SAC58R_ESAI_PAD_CTRL),
	SAC58R_PAD_PA16_ESAI0_SDO3_SDI2 = IOMUX_PAD(0x0040, 0x0040, 1,  __NA_, 0, SAC58R_ESAI_PAD_CTRL),
	SAC58R_PAD_PA17_ESAI0_SDO1      = IOMUX_PAD(0x0044, 0x0044, 1,  __NA_, 0, SAC58R_ESAI_PAD_CTRL),
	SAC58R_PAD_PA18_ESAI0_SD00      = IOMUX_PAD(0x0048, 0x0048, 1,  __NA_, 0, SAC58R_ESAI_PAD_CTRL),
	SAC58R_PAD_PA19_ESAI0_SCKT      = IOMUX_PAD(0x004c, 0x004c, 1, 0x0854, 2, SAC58R_ESAI_PAD_CTRL),
	SAC58R_PAD_PA20_ESAI0_FST       = IOMUX_PAD(0x0050, 0x0050, 1, 0x0858, 2, SAC58R_ESAI_PAD_CTRL),

	SAC58R_PAD_PA4__GPIO_4			= IOMUX_PAD(0x0010, 0x0010, 0,	__NA_, 0, SAC58R_GPIO_PAD_CTRL),

	SAC58R_PAD_PE25__GPIO_153		= IOMUX_PAD(0x264, 0x264, 0,  __NA_, 0, SAC58R_GPIO_PAD_CTRL),
	SAC58R_PAD_PE26__GPIO_154		= IOMUX_PAD(0x268, 0x268, 0,  __NA_, 0, SAC58R_GPIO_PAD_CTRL),

	SAC58R_PAD_PF14__GPIO_174		= IOMUX_PAD(0x02B8, 0x02B8, 0,  __NA_, 0, SAC58R_GPIO_PAD_CTRL),
	SAC58R_PAD_PK12__GPIO_332		= IOMUX_PAD(0x0530, 0x0530, 0,  __NA_, 0, SAC58R_GPIO_PAD_CTRL),
	SAC58R_PAD_PL8__GPIO_360		= IOMUX_PAD(0x05A0, 0x05A0, 0,  __NA_, 0, SAC58R_GPIO_PAD_CTRL),
	SAC58R_PAD_PL9__GPIO_361		= IOMUX_PAD(0x05A4, 0x05A4, 0,  __NA_, 0, SAC58R_GPIO_PAD_CTRL),

	SAC58R_PAD_PL1_SPIO_PCS1		= IOMUX_PAD(0x0584, 0x0584, 1,	__NA_, 0, SAC58R_SPI_PAD_CTRL|PAD_CTL_OBE_ENABLE),
	SAC58R_PAD_PH8_SPIO_PCS2		= IOMUX_PAD(0x03A0, 0x03A0, 1,	__NA_, 0, SAC58R_SPI_PAD_CTRL|PAD_CTL_OBE_ENABLE),
	SAC58R_PAD_PH3_SPIO_PCS3		= IOMUX_PAD(0x038C, 0x038C, 2,	__NA_, 0, SAC58R_SPI_PAD_CTRL|PAD_CTL_OBE_ENABLE),
	SAC58R_PAD_PK14_SPIO_SOUT		= IOMUX_PAD(0x0538, 0x0538, 1,	__NA_, 0, SAC58R_SPI_PAD_CTRL|PAD_CTL_OBE_ENABLE),
	SAC58R_PAD_PK15_SPIO_PCS0		= IOMUX_PAD(0x053C, 0x053C, 1,	__NA_, 0, SAC58R_SPI_PAD_CTRL|PAD_CTL_OBE_ENABLE),
	SAC58R_PAD_PK16_SPIO_SCK		= IOMUX_PAD(0x0540, 0x0540, 1,	0x0C84, 3, SAC58R_SPI_PAD_CTRL|PAD_CTL_OBE_ENABLE),
	SAC58R_PAD_PK17_SPIO_SIN		= IOMUX_PAD(0x0544, 0x0544, 0,	0x0C80, 4, SAC58R_SPI_PAD_CTRL|PAD_CTL_IBE_ENABLE),

	SAC58R_PAD_PA10_ENET_RMII_CLKOUT	= IOMUX_PAD(0x0028, 0x0028, 3, __NA_, 0, SAC58R_ENET_PAD_CTRL),
	SAC58R_PAD_PB0_ENET_RMII_RXD1		= IOMUX_PAD(0x0080, 0x0080, 0, 0x0F0C, 2, SAC58R_ENET_PAD_CTRL),
	SAC58R_PAD_PB2_ENET_RMII_CRS_DV		= IOMUX_PAD(0x0088, 0x0088, 0, 0x0F04, 2, SAC58R_ENET_PAD_CTRL),
	SAC58R_PAD_PB3_ENET_RMII_TXDEN 		= IOMUX_PAD(0x008C, 0x008C, 1, __NA_, 0, SAC58R_ENET_PAD_CTRL),
	SAC58R_PAD_PB4_ENET_RMII_RXD0		= IOMUX_PAD(0x0090, 0x0090, 0, 0x0F08, 2, SAC58R_ENET_PAD_CTRL),
	SAC58R_PAD_PB7_ENET_RMII_MDIO		= IOMUX_PAD(0x009C, 0x009C, 1, 0x0F24, 2, SAC58R_ENET_PAD_CTRL),
	SAC58R_PAD_PB8_ENET_RMII_TXD0		= IOMUX_PAD(0x00A0, 0x00A0, 1, __NA_, 0, SAC58R_ENET_PAD_CTRL),
	SAC58R_PAD_PB9_ENET_RMII_TXD1		= IOMUX_PAD(0x00A4, 0x00A4, 1, __NA_, 0, SAC58R_ENET_PAD_CTRL),
	SAC58R_PAD_PB10_ENET_RMII_MDC		= IOMUX_PAD(0x00A8, 0x00A8, 1, __NA_, 0, SAC58R_ENET_PAD_CTRL),
	SAC58R_PAD_PB12_ENET_REF_MII_CLK	= IOMUX_PAD(0x00B0, 0x00B0, 2, 0x0F20, 3, SAC58R_ENET_PAD_CTRL),
	SAC58R_PAD_PL13_GPIO365 			= IOMUX_PAD(0x05B4, 0x05B4, 0, __NA_, 0, SAC58R_GPIO_PAD_CTRL),

	SAC58R_PAD_PL0_GPIO352 			= IOMUX_PAD(0x0580, 0x0580, 0, __NA_, 0, SAC58R_GPIO_PAD_CTRL),
	SAC58R_PAD_PF18_GPIO178			= IOMUX_PAD(0x02C8, 0x02C8, 0, __NA_, 0, SAC58R_GPIO_PAD_CTRL),

 	SAC58R_PAD_PF16_USB0_ID			= IOMUX_PAD(0x02C0, 0x02C0, 0, 0x0DA0, 2, SAC58R_USBID_PAD_CTRL),
 	SAC58R_PAD_PF17_GPIO_177               = IOMUX_PAD(0x02C4, 0x02C4, 0,  __NA_, 0, SAC58R_GPIO_PAD_CTRL),
 	SAC58R_PAD_PH21_GPIO_245               = IOMUX_PAD(0x02D4, 0x02D4, 0,  __NA_, 0, SAC58R_GPIO_PAD_CTRL),

	SAC58R_PAD_PF29__NFC_IO15		= IOMUX_PAD(0x02f4, 0x02f4, 2, 0x0f8c, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PF28__NFC_IO14		= IOMUX_PAD(0x02f0, 0x02f0, 2, 0x0f88, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PF27__NFC_IO13		= IOMUX_PAD(0x02ec, 0x02ec, 2, 0x0f84, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PF26__NFC_IO12		= IOMUX_PAD(0x02e8, 0x02e8, 2, 0x0f80, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PF23__NFC_IO11		= IOMUX_PAD(0x02dc, 0x02dc, 2, 0x0f7c, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PF22__NFC_IO10		= IOMUX_PAD(0x02d8, 0x02d8, 2, 0x0f78, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PF20__NFC_IO9		= IOMUX_PAD(0x02d0, 0x02d0, 2, 0x0f74, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PF19__NFC_IO8		= IOMUX_PAD(0x02cc, 0x02cc, 2, 0x0f70, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PC13__NFC_IO7		= IOMUX_PAD(0x0134, 0x0134, 1, 0x0f6c, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PC12__NFC_IO6		= IOMUX_PAD(0x0130, 0x0130, 1, 0x0f68, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PC11__NFC_IO5		= IOMUX_PAD(0x012c, 0x012c, 1, 0x0f64, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PC10__NFC_IO4		= IOMUX_PAD(0x0128, 0x0128, 1, 0x0f60, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PC9__NFC_IO3			= IOMUX_PAD(0x0124, 0x0124, 1, 0x0f5c, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PC6__NFC_IO2			= IOMUX_PAD(0x0118, 0x0118, 1, 0x0f58, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PC8__NFC_IO1			= IOMUX_PAD(0x0120, 0x0120, 1, 0x0f54, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PC7__NFC_IO0			= IOMUX_PAD(0x011c, 0x011c, 1, 0x0f50, 2, SAC58R_NFC_IO_PAD_CTRL),
	SAC58R_PAD_PC5__NFC_WEB			= IOMUX_PAD(0x0114, 0x0114, 1, __NA_, 0, SAC58R_NFC_SIG_PAD_CTRL),
	SAC58R_PAD_PC2__NFC_CE0B		= IOMUX_PAD(0x0108, 0x0108, 1, __NA_, 0, SAC58R_NFC_SIG_PAD_CTRL),
	SAC58R_PAD_PA16__NFC_CE1B		= IOMUX_PAD(0x0040, 0x0040, 3, __NA_, 0, SAC58R_NFC_SIG_PAD_CTRL),
	SAC58R_PAD_PC1__NFC_REB			= IOMUX_PAD(0x0104, 0x0104, 1, __NA_, 0, SAC58R_NFC_SIG_PAD_CTRL),
	SAC58R_PAD_PC0__NFC_RB0B		= IOMUX_PAD(0x0100, 0x0100, 0, 0x0f90, 2, SAC58R_NFC_SIG_RB_PAD_CTRL), /* Ready/Busy is an input signal with xtal PULLUP */
	SAC58R_PAD_PF25__NFC_RB1B               = IOMUX_PAD(0x02e4, 0x02e4, 0, 0x0f94, 3, SAC58R_NFC_SIG_RB_PAD_CTRL),
	SAC58R_PAD_PF25_GPIO_185		= IOMUX_PAD(0x02e4, 0x02e4, 0, __NA_, 0, SAC58R_GPIO_PAD_CTRL),
	SAC58R_PAD_PC4__NFC_ALE			= IOMUX_PAD(0x0110, 0x0110, 1, __NA_, 0, SAC58R_NFC_SIG_PAD_CTRL),
	SAC58R_PAD_PC3__NFC_CLE			= IOMUX_PAD(0x010c, 0x010c, 1, __NA_, 0, SAC58R_NFC_SIG_PAD_CTRL),


	SAC58R_PAD_PG3__SPDIF0_EXTCLK		= IOMUX_PAD(0x030c, 0x030c, 0, 0x0D94, 2, SAC58R_SPI_PAD_CTRL),
	SAC58R_PAD_PG4__SPDIF0_IN1		= IOMUX_PAD(0x0310, 0x0310, 0, 0x0D90, 2, SAC58R_SPI_PAD_CTRL),
	SAC58R_PAD_PG5__SPDIF0_OUT1		= IOMUX_PAD(0x0314, 0x0314, 1, __NA_, 0, SAC58R_SPI_PAD_CTRL),
	SAC58R_PAD_PG6__SPDIF0_PLOCK		= IOMUX_PAD(0x0318, 0x0318, 1, __NA_, 0, SAC58R_SPI_PAD_CTRL),
	SAC58R_PAD_PG7__SPDIF0_SRCLK		= IOMUX_PAD(0x031C, 0x031C, 1, __NA_, 0, SAC58R_SPI_PAD_CTRL),

	SAC58R_PAD_PG0__SPDIF1_EXTCLK		= IOMUX_PAD(0x0300, 0x0300, 0, 0x0D9C, 2, SAC58R_SAI_PAD_CTRL),
	SAC58R_PAD_PG1__SPDIF1_IN1		= IOMUX_PAD(0x0304, 0x0304, 0, 0x0D98, 2, SAC58R_SAI_PAD_CTRL),
	SAC58R_PAD_PG2__SPDIF1_OUT1		= IOMUX_PAD(0x0308, 0x0308, 1, __NA_, 0, SAC58R_SAI_PAD_CTRL),
	SAC58R_PAD_PL12__SPDIF1_PLOCK		= IOMUX_PAD(0x05B0, 0x05B0, 1, __NA_, 0, SAC58R_SAI_PAD_CTRL),
	SAC58R_PAD_PL13__SPDIF1_SRCLK		= IOMUX_PAD(0x05B4, 0x05B4, 1, __NA_, 0, SAC58R_SAI_PAD_CTRL),

	SAC58R_PAD_PC24__QSPI_A_DATA0		= IOMUX_PAD(0x0160, 0x0160, 1, 0x0CA8, 2, SAC58R_QSPI_SIG_PAD_CTRL),
	SAC58R_PAD_PC21__QSPI_A_DATA1		= IOMUX_PAD(0x0154, 0x0154, 1, 0x0CAC, 2, SAC58R_QSPI_SIG_PAD_CTRL),
	SAC58R_PAD_PC25__QSPI_A_DATA2		= IOMUX_PAD(0x0164, 0x0164, 1, 0x0CB0, 2, SAC58R_QSPI_SIG_PAD_CTRL),
	SAC58R_PAD_PC16__QSPI_A_DATA3		= IOMUX_PAD(0x0140, 0x0140, 1, 0x0CB4, 2, SAC58R_QSPI_SIG_PAD_CTRL),

	SAC58R_PAD_PC19__QSPI_B_DATA0		= IOMUX_PAD(0x014c, 0x014c, 1, 0x0CBC, 2, SAC58R_QSPI_SIG_PAD_CTRL),
	SAC58R_PAD_PC15__QSPI_B_DATA1		= IOMUX_PAD(0x013c, 0x013c, 1, 0x0CC0, 2, SAC58R_QSPI_SIG_PAD_CTRL),
	SAC58R_PAD_PC23__QSPI_B_DATA2		= IOMUX_PAD(0x015c, 0x015c, 1, 0x0CC4, 2, SAC58R_QSPI_SIG_PAD_CTRL),
	SAC58R_PAD_PC14__QSPI_B_DATA3		= IOMUX_PAD(0x0138, 0x0138, 1, 0x0CC8, 2, SAC58R_QSPI_SIG_PAD_CTRL),

	SAC58R_PAD_PC17__QSPI_A_CS0		= IOMUX_PAD(0x0144, 0x0144, 1, __NA_, 0, SAC58R_QSPI_CS_SIG_PAD_CTRL),
	SAC58R_PAD_PC18__QSPI_B_CS0		= IOMUX_PAD(0x0148, 0x0148, 1, __NA_, 0, SAC58R_QSPI_CS_SIG_PAD_CTRL),

	SAC58R_PAD_PD2__QSPI_A_CS1		= IOMUX_PAD(0x0188, 0x0188, 4, __NA_, 0, SAC58R_QSPI_CS_SIG_PAD_CTRL),
	SAC58R_PAD_PD9__QSPI_B_CS1		= IOMUX_PAD(0x01A4, 0x01A4, 5, __NA_, 0, SAC58R_QSPI_CS_SIG_PAD_CTRL),

	SAC58R_PAD_PC20__QSPI_A_SCK		= IOMUX_PAD(0x0150, 0x0150, 1, __NA_, 0, SAC58R_QSPI_SIG_PAD_CTRL),
	SAC58R_PAD_PC22__QSPI_B_SCK		= IOMUX_PAD(0x0158, 0x0158, 1, __NA_, 0, SAC58R_QSPI_SIG_PAD_CTRL),
};

#endif	/* __IOMUX_SAC58R_H__ */
